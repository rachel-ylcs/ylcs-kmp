[versions]

# Plugins #
kotlin = "2.2.0-RC"
cmp = "1.8.0"
agp = "8.11.0-alpha03"

# Libs #

# Common
lifecycle = "2.9.0-beta01"
material3-icon-old = "1.7.3"
ktor = "3.1.3"
sketch = "4.0.6"
mmkv = "2.2.2"
coroutines = "1.10.2"

# Android
media3 = "1.7.0-alpha01"

[plugins]
gradleApplication = { id = "org.gradle.application" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "cmp" }
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

[libraries]

# Tooling
compose-ui-graphics-android = { module = "androidx.compose.ui:ui-graphics-android", version.ref = "cmp" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "cmp" }
compose-ui-android = { module = "androidx.compose.ui:ui-android", version.ref = "cmp" }

# Common
compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "cmp" }
compose-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "cmp" }
compose-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "cmp" }
compose-ui-backhandler = { module = "org.jetbrains.compose.ui:ui-backhandler", version.ref = "cmp" }
compose-components-resources = { module = "org.jetbrains.compose.components:components-resources", version.ref = "cmp" }
compose-components-uiToolingPreview = { module = "org.jetbrains.compose.components:components-ui-tooling-preview", version.ref = "cmp" }
compose-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "cmp" }
compose-material3-icons = { module = "org.jetbrains.compose.material:material-icons-core", version.ref = "material3-icon-old" }
compose-material3-iconsExtended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "material3-icon-old" }

kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.6.2" }
kotlinx-io = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version = "0.7.0" }
kotlinx-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version = "1.8.1" }

runtime-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version = "2.9.0-beta01" }
runtime-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
runtime-lifecycle = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }

ktor-client = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

sketch = { module = "io.github.panpf.sketch4:sketch-compose", version.ref = "sketch" }
sketch-http = { module = "io.github.panpf.sketch4:sketch-http-ktor3", version.ref = "sketch" }
sketch-resources = { module = "io.github.panpf.sketch4:sketch-compose-resources", version.ref = "sketch" }
sketch-gif = { module = "io.github.panpf.sketch4:sketch-animated-gif", version.ref = "sketch" }
sketch-webp = { module = "io.github.panpf.sketch4:sketch-animated-webp", version.ref = "sketch" }
sketch-zoom = { module = "io.github.panpf.zoomimage:zoomimage-compose-sketch4", version = "1.2.0" }

tool-html = { module = "com.fleeksoft.ksoup:ksoup", version = "0.2.3" }
tool-blur = { module = "dev.chrisbanes.haze:haze", version = "1.6.0" }
tool-reorder = { module = "sh.calvin.reorderable:reorderable", version = "2.4.3" }
tool-qrcode = { module = "io.github.alexzhirkevich:qrose", version = "1.0.1" }

# JVM
ktor-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }

# Android
compose-activity = { module = "androidx.activity:activity-compose", version = "1.10.0" }

kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

media3-ui = { module = "androidx.media3:media3-ui-compose", version.ref = "media3" }
media3-session = { module = "androidx.media3:media3-session", version.ref = "media3" }
media3-player = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }

mmkv-android = { module = "com.tencent:mmkv", version.ref = "mmkv" }
scan-android = { module = "com.github.jenly1314:zxing-lite", version = "3.2.0" }

# Apple
ktor-apple = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }

# Desktop
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version = "coroutines" }

jna = { module = "net.java.dev.jna:jna", version = "5.17.0" }
jna-platform = { module = "net.java.dev.jna:jna-platform", version = "5.17.0" }
vlcj = { module = "uk.co.caprica:vlcj", version = "4.11.0" }

# Web
ktor-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }

# Server
ktor-server = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-host = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-config = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-server-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }

logback = { module = "ch.qos.logback:logback-classic", version = "1.5.18" }
mysql-pool = { module = "com.zaxxer:HikariCP", version = "6.3.0" }
mysql = { module = "mysql:mysql-connector-java", version = "8.0.33" }
redis = { module = "redis.clients:jedis", version = "6.0.0" }