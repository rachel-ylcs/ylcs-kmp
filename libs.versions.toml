[versions]

# Plugins #
kotlin = "2.1.20-RC3"
cmp = "1.8.0-alpha04"
cmp-stable = "1.7.3"
agp = "8.7.3"

# Libs #

# Common
lifecycle = "2.9.0-alpha04"
ktor = "3.1.1"
sketch = "4.0.4"
mmkv = "2.1.0"

# Desktop
javafx = "17.0.9" #noinspection GradleDependency

[plugins]
gradleApplication = { id = "org.gradle.application" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "cmp" }
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }

[libraries]
# Common
compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "cmp" }
compose-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "cmp" }
compose-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "cmp" }
compose-ui-backhandler = { module = "org.jetbrains.compose.ui:ui-backhandler", version.ref = "cmp" }
compose-components-resources = { module = "org.jetbrains.compose.components:components-resources", version.ref = "cmp" }
compose-components-uiToolingPreview = { module = "org.jetbrains.compose.components:components-ui-tooling-preview", version.ref = "cmp" }
compose-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "cmp" }
compose-material3-iconsExtended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "cmp-stable" }

kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version = "1.10.1" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.6.1" }
kotlinx-io = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version = "0.6.0" }
kotlinx-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version = "1.8.0" }

runtime-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version = "2.9.0-alpha14" }
runtime-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycle" }
runtime-lifecycle = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }

ktor-client = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

sketch = { module = "io.github.panpf.sketch4:sketch-compose", version.ref = "sketch" }
sketch-http = { module = "io.github.panpf.sketch4:sketch-http-ktor3", version.ref = "sketch" }
sketch-resources = { module = "io.github.panpf.sketch4:sketch-compose-resources", version.ref = "sketch" }
sketch-gif = { module = "io.github.panpf.sketch4:sketch-animated-gif", version.ref = "sketch" }
sketch-webp = { module = "io.github.panpf.sketch4:sketch-animated-webp", version.ref = "sketch" }
sketch-zoom = { module = "io.github.panpf.zoomimage:zoomimage-compose-sketch4", version = "1.1.0" }

html = { module = "com.fleeksoft.ksoup:ksoup", version = "0.2.1" }

uri = { module = "com.eygraber:uri-kmp", version = "0.0.19" }

# JVM
ktor-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }

# Android
compose-activity = { module = "androidx.activity:activity-compose", version = "1.10.0" }
compose-uiTooling = { module = "androidx.compose.ui:ui-tooling", version = "1.7.8" }

mmkv-android = { module = "com.tencent:mmkv", version.ref = "mmkv" }

image-crop = { module = "com.github.moyuruaizawa:cropify", version = "0.5.1" }
image-compress = { module = "com.github.forJrking:KLuban", version = "1.1.0" }

# Apple
ktor-apple = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }

# Desktop
javafx-base = { module = "org.openjfx:javafx-base", version.ref = "javafx" }
javafx-graphics = { module = "org.openjfx:javafx-graphics", version.ref = "javafx" }
javafx-controls = { module = "org.openjfx:javafx-controls", version.ref = "javafx" }
javafx-fxml = { module = "org.openjfx:javafx-fxml", version.ref = "javafx" }
javafx-media = { module = "org.openjfx:javafx-media", version.ref = "javafx" }
javafx-swing = { module = "org.openjfx:javafx-swing", version.ref = "javafx" }
javafx-web = { module = "org.openjfx:javafx-web", version.ref = "javafx" }

# Web
ktor-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }

# Server
ktor-server = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-host = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-config = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-server-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }

logback = { module = "ch.qos.logback:logback-classic", version = "1.5.15" }
mysql-pool = { module = "com.zaxxer:HikariCP", version = "6.2.1" }
mysql = { module = "mysql:mysql-connector-java", version = "8.0.33" }
redis = { module = "redis.clients:jedis", version = "5.3.0-beta1" }